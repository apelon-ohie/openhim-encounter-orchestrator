<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" version="CE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
	<context:property-placeholder location="classpath:encounter-mediator.properties, classpath:encounter-mediator-override.properties"/>
    <flow name="http-interfaceFlow1" doc:name="http-interfaceFlow1">
        <http:inbound-endpoint exchange-pattern="request-response" host="0.0.0.0" port="${encountermeditor.port}" path="ws/rest/v1/patient/" doc:name="HTTP"/>
        <custom-transformer class="org.jembi.rhea.transformers.HttpRequestToRestfulHttpRequestTransformer" doc:name="Java"/>
        <choice doc:name="Choice">
            <when expression="message.payload.path.contains('ws/rest/v1/patient/') &amp;&amp; message.payload.path.contains('/encounter/') &amp;&amp; message.payload.httpMethod.equals('GET')" evaluator="groovy">
                <vm:outbound-endpoint exchange-pattern="request-response" path="getEncounter-Generic-NormalizationQueue" doc:name="GetEncVM"/>
            </when>
            <when expression="message.payload.path.contains('ws/rest/v1/patient/') &amp;&amp; message.payload.path.contains('/encounters') &amp;&amp; message.payload.httpMethod.equals('GET')" evaluator="groovy">
                <vm:outbound-endpoint exchange-pattern="request-response" path="queryEncounters-Generic-NormalizationQueue" doc:name="QueryEncVM"/>
            </when>
            <when expression="message.payload.path.contains('ws/rest/v1/patient/') &amp;&amp; message.payload.path.contains('/encounters') &amp;&amp; message.payload.httpMethod.equals('POST')" evaluator="groovy">
                <vm:outbound-endpoint exchange-pattern="request-response" path="saveEncounters-Generic-NormalizationQueue" doc:name="SaveEncVM"/>
            </when>
            <otherwise>
                <logger message="Recieved a request that does not conform to any encounter paths" level="ERROR" doc:name="Logger"/>
                <scripting:transformer doc:name="Groovy">
                    <scripting:script engine="Groovy"><![CDATA[org.jembi.rhea.RestfulHttpResponse res = new org.jembi.rhea.RestfulHttpResponse();
res.setHttpStatus(404);
res.setBody("Save patient encounter mediator could not find a resource at this path");
return res;]]></scripting:script>
                </scripting:transformer>
            </otherwise>
        </choice>
        <custom-transformer class="org.jembi.rhea.transformers.RestfulHttpResponseToHttpResponseTransformer" doc:name="Java"/>
    </flow>
</mule>
