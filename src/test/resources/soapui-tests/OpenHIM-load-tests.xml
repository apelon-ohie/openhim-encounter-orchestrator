<?xml version="1.0" encoding="UTF-8"?>
<con:loadui-project label="OpenHIM-load-tests" id="b82e7359-0dce-4ca3-8b2e-2851f2f4a745" xmlns:con="http://eviware.com/loadui/config"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="ModelItem.saveReport" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="ModelItem.reportFolder" type="java.lang.String"/><con:property propagates="true" key="ModelItem.reportFormat" type="java.lang.String"/><con:property propagates="true" key="ProjectItem.statisticNumberOfAutosaves" type="java.lang.Long">5</con:property></con:properties><con:attributes><con:property key="miniature">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
SAAAAABJRU5ErkJggg==
</con:property><con:property key="limits">Time=120;</con:property><con:property key="gui.statistics.view">statistics.view</con:property></con:attributes><con:addons/><con:scene label="Save encounter transactions" id="54889dcf-ea45-4f25-a510-bf75d2ad6497" version="20"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con:property></con:properties><con:attributes><con:property key="gui.layoutX">174</con:property><con:property key="gui.layoutY">183</con:property><con:property key="gui.compact">false</con:property><con:property key="miniature">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
uf4fuGJIPOjg6jgAAAAASUVORK5CYII=
</con:property></con:attributes><con:addons/><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Fixed Rate" id="bf70ed01-ae1e-45b7-8d89-735c63252698" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends an empty message periodically, at a set rate
 * 
 * @id com.eviware.FixedRate
 * @help http://www.loadui.org/Generators/fixed-rate-component.html
 * @name Fixed Rate
 * @category generators
 * @nonBlocking true
 */

import java.util.concurrent.TimeUnit

//Properties
createProperty( 'rate', Long, 10 ) { schedule() }
createProperty( 'unit', String, 'Sec' ) { schedule() }

onReplace( stateProperty ) { value ->
	if( value ) schedule()
	else future?.cancel( true )
}

createProperty( 'burstSize', Long, 1 )

triggerBurst = { 
	burstSize.value.times {
		trigger() 
	} 
}

future = null
schedule = {
	if( stateProperty.value ) {
		long microsecondsPerUnit = unit.value == 'Sec' ? 1000000 : unit.value == 'Min' ? 60000000 : 3600000000
		long delay = Math.max( 1, (long)(microsecondsPerUnit / rate.value) )
		future?.cancel( true )
		future = scheduleAtFixedRate( triggerBurst, delay, delay, TimeUnit.MICROSECONDS )
	}
}

onAction( "START" ) { schedule() }
onAction( "STOP" ) { future?.cancel( true ) }

//Layout
layout { 
	property( property:rate, label:'Rate', min:1 ) 
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" }, constraints:'wmin 75' )
	}
}

//Compact Layout
compactLayout {
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" } )
	}
}

//Settings
settings( label: "General" ) {
	property( property: burstSize, label: 'Burst size' ) 
}

if( running ) schedule()</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="rate" type="java.lang.Long">6</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property><con:property propagates="true" key="burstSize" type="java.lang.Long">1</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Rate</con:property><con:property key="_digest">c7926addaeaab3d091fd733b87da44d4</con:property><con:property key="_id">com.eviware.FixedRate</con:property><con:property key="_classLoader">com.eviware.FixedRate</con:property><con:property key="gui.layoutX">375</con:property><con:property key="gui.layoutY">210</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Save encounter runner" id="6bf2af3a-62fd-42df-a9d3-7d411c52b81f"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="concurrentSamples" type="java.lang.Long">100</con:property><con:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con:property><con:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="_projectFileworkingCopy" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="false" key="projectRelativePath" type="java.lang.String">OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con:property propagates="true" key="settingsFile" type="java.io.File">/home/ryan/soapui-settings.xml</con:property><con:property propagates="true" key="_projectPassword" xsi:nil="true" type="java.lang.String" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:property propagates="true" key="useProjectRelativePath" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con:property><con:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con:property><con:property propagates="false" key="projectFile" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="testSuite" type="java.lang.String">OpenHIM Interface TestSuite</con:property><con:property propagates="true" key="testCase" type="java.lang.String">Save encounter</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">soapUI Runner</con:property><con:property key="gui.layoutX">471</con:property><con:property key="gui.layoutY">450</con:property><con:property key="gui.compact">false</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Ramp" id="d083070e-34f7-4626-86a9-ef37a0393819" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends signals at a decreasing or increasing rate until it gets to a prespecified level
 * 
 * @id com.eviware.Ramp
 * @help http://www.loadui.org/Generators/ramp-updown-component.html
 * @category generators
 * @nonBlocking true
 */

import com.eviware.loadui.api.events.PropertyEvent

//Properties
createProperty( 'start', Long, 0 )
createProperty( 'end', Long, 10 )
createProperty( 'period', Long, 10 )
createProperty( 'unit', String, 'Sec' )

direction = "up"
msPerUnit = 1000
currentRate = 0
gradient = 0
timeEllapsed = 0
currentDelay = 0
targetReached = false

timer = new Timer(true)

scheduled = false
future = null

reset = {
	currentDelay = 0
	timeEllapsed = 0
	targetReached = false
	if ( period.value > 0 ) {
		//Some sanity checks
//		if (start.value != 0) {
//			if (msPerUnit/start.value > period.value * 1000) {
//				targetReached = true
//				currentRate = end.value
//			}
//		} 
		
		if (!targetReached) {
			gradient = (end.value - start.value)/ (period.value * 1000)
			currentRate = start.value
			while (currentRate.longValue() == 0) {
				timeEllapsed++
				currentRate = start.value + timeEllapsed * gradient
			}
		}
	} else {
		targetReached = true
		currentRate = end.value()
	}
	scheduled = false
}

begin = {
	if (stateProperty.value) {
		reset();
		schedule();
	}
}

schedule = {
	if (stateProperty.value &amp;&amp; running &amp;&amp; !scheduled) {
		if (!targetReached) {
			if (currentDelay > 0) {
				timeEllapsed = timeEllapsed + currentDelay
				currentRate = start.value + timeEllapsed * gradient
			}
			
			if (timeEllapsed/1000 >= period.value) {
				targetReached = true
				currentRate = end.value
				direction = "none"
			}
			if (currentRate.longValue() > 0) { 
				currentDelay = msPerUnit/(currentRate.longValue()) 
			}
			else { 
				currentDelay = 1 //Handling edge cases
			}
		} 
		
		future = timer.runAfter(currentDelay.intValue()) {
			trigger()
			scheduled = false
			schedule()
		}
		scheduled = true
	}
}

addEventListener( PropertyEvent ) { event ->
	if ( event.event == PropertyEvent.Event.VALUE ) {
		
		if( event.property == unit ) {
			if ( unit.value == "Sec" )
				msPerUnit = 1000
			if ( unit.value == "Min" )
				msPerUnit = 60000
			if ( unit.value == "Hour" )
				msPerUnit = 3600000
		}
		
		future?.cancel()
		
		started = false
		if (end.value > start.value)
			direction = "up"
		
		if (start.value > end.value)
			direction = "down"
		
		if (start.value == end.value)
			direction = "none"
		begin()
	}
}

onAction( "START" ) { schedule() }

onAction( "STOP" ) {
	future?.cancel()
	started = false
	scheduled = false
}

onAction( "COMPLETE" ) { reset() }

//Layout
layout  { 
	property( property:start, label:'Start', min:0 )
	property( property:end, label:'End', min:0 )
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	property( property:period, label:'Period\n(Sec)', min:1 ) 
	separator( vertical:true )
	box ( layout:"wrap, ins 0" ) {
		box( widget:'display' ) {
			node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" }, constraints:"w 60!" )
		}
		action( label:"Restart", action: { reset(); begin(); }, constraints:"align right" )
	}
}

//Compact Layout
compactLayout  {
	box( widget:'display' ) {
		node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" } )
	}
}

//Settings
//settings( label: "Properties", layout: 'wrap 2' ) {
//	box(layout:"growx, wrap 1") {
//		property( property:start, label:'Start', min:0 ) 
//		property( property:end, label:'End', min:0 ) 
//		property( property:period, label:'Period', min:1 ) 
//		property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
//	}
//} 

reset();
if (running)
	begin();
</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="start" type="java.lang.Long">0</con:property><con:property propagates="true" key="end" type="java.lang.Long">12</con:property><con:property propagates="true" key="period" type="java.lang.Long">120</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp</con:property><con:property key="_digest">3e1518dec707a9129b715eccefcde3da</con:property><con:property key="_id">com.eviware.Ramp</con:property><con:property key="_classLoader">com.eviware.Ramp</con:property><con:property key="gui.layoutX">773</con:property><con:property key="gui.layoutY">207</con:property></con:attributes><con:addons/></con:component><con:connection outputTerminalId="bf70ed01-ae1e-45b7-8d89-735c63252698/triggerTerminal" inputTerminalId="6bf2af3a-62fd-42df-a9d3-7d411c52b81f/triggerTerminal"/></con:scene><con:scene label="Get encounter transactions" id="83a33f6d-ed3d-440d-b153-6fc4fdafcc2a" version="12"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con:property></con:properties><con:attributes><con:property key="gui.layoutX">558</con:property><con:property key="gui.layoutY">183</con:property><con:property key="gui.compact">false</con:property><con:property key="miniature">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
</con:property></con:attributes><con:addons/><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Fixed Rate" id="0888ae3f-3942-401b-92b3-aef683e3ced9" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends an empty message periodically, at a set rate
 * 
 * @id com.eviware.FixedRate
 * @help http://www.loadui.org/Generators/fixed-rate-component.html
 * @name Fixed Rate
 * @category generators
 * @nonBlocking true
 */

import java.util.concurrent.TimeUnit

//Properties
createProperty( 'rate', Long, 10 ) { schedule() }
createProperty( 'unit', String, 'Sec' ) { schedule() }

onReplace( stateProperty ) { value ->
	if( value ) schedule()
	else future?.cancel( true )
}

createProperty( 'burstSize', Long, 1 )

triggerBurst = { 
	burstSize.value.times {
		trigger() 
	} 
}

future = null
schedule = {
	if( stateProperty.value ) {
		long microsecondsPerUnit = unit.value == 'Sec' ? 1000000 : unit.value == 'Min' ? 60000000 : 3600000000
		long delay = Math.max( 1, (long)(microsecondsPerUnit / rate.value) )
		future?.cancel( true )
		future = scheduleAtFixedRate( triggerBurst, delay, delay, TimeUnit.MICROSECONDS )
	}
}

onAction( "START" ) { schedule() }
onAction( "STOP" ) { future?.cancel( true ) }

//Layout
layout { 
	property( property:rate, label:'Rate', min:1 ) 
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" }, constraints:'wmin 75' )
	}
}

//Compact Layout
compactLayout {
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" } )
	}
}

//Settings
settings( label: "General" ) {
	property( property: burstSize, label: 'Burst size' ) 
}

if( running ) schedule()</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="rate" type="java.lang.Long">2</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property><con:property propagates="true" key="burstSize" type="java.lang.Long">1</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Rate</con:property><con:property key="_digest">c7926addaeaab3d091fd733b87da44d4</con:property><con:property key="_id">com.eviware.FixedRate</con:property><con:property key="_classLoader">com.eviware.FixedRate</con:property><con:property key="gui.layoutX">437</con:property><con:property key="gui.layoutY">219</con:property><con:property key="gui.compact">false</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Get encounter runner" id="213e27f2-ac82-49af-817b-f87487f4fcf7"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="concurrentSamples" type="java.lang.Long">100</con:property><con:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con:property><con:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="_projectFileworkingCopy" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="false" key="projectRelativePath" type="java.lang.String">OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con:property propagates="true" key="settingsFile" type="java.io.File">/home/ryan/soapui-settings.xml</con:property><con:property propagates="true" key="_projectPassword" xsi:nil="true" type="java.lang.String" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:property propagates="true" key="useProjectRelativePath" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con:property><con:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con:property><con:property propagates="false" key="projectFile" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="testSuite" type="java.lang.String">OpenHIM Interface TestSuite</con:property><con:property propagates="true" key="testCase" type="java.lang.String">Query encounters</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">soapUI Runner</con:property><con:property key="gui.layoutX">480</con:property><con:property key="gui.layoutY">450</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Ramp" id="5da54aa2-5494-42e5-baa3-864420276bee" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends signals at a decreasing or increasing rate until it gets to a prespecified level
 * 
 * @id com.eviware.Ramp
 * @help http://www.loadui.org/Generators/ramp-updown-component.html
 * @category generators
 * @nonBlocking true
 */

import com.eviware.loadui.api.events.PropertyEvent

//Properties
createProperty( 'start', Long, 0 )
createProperty( 'end', Long, 10 )
createProperty( 'period', Long, 10 )
createProperty( 'unit', String, 'Sec' )

direction = "up"
msPerUnit = 1000
currentRate = 0
gradient = 0
timeEllapsed = 0
currentDelay = 0
targetReached = false

timer = new Timer(true)

scheduled = false
future = null

reset = {
	currentDelay = 0
	timeEllapsed = 0
	targetReached = false
	if ( period.value > 0 ) {
		//Some sanity checks
//		if (start.value != 0) {
//			if (msPerUnit/start.value > period.value * 1000) {
//				targetReached = true
//				currentRate = end.value
//			}
//		} 
		
		if (!targetReached) {
			gradient = (end.value - start.value)/ (period.value * 1000)
			currentRate = start.value
			while (currentRate.longValue() == 0) {
				timeEllapsed++
				currentRate = start.value + timeEllapsed * gradient
			}
		}
	} else {
		targetReached = true
		currentRate = end.value()
	}
	scheduled = false
}

begin = {
	if (stateProperty.value) {
		reset();
		schedule();
	}
}

schedule = {
	if (stateProperty.value &amp;&amp; running &amp;&amp; !scheduled) {
		if (!targetReached) {
			if (currentDelay > 0) {
				timeEllapsed = timeEllapsed + currentDelay
				currentRate = start.value + timeEllapsed * gradient
			}
			
			if (timeEllapsed/1000 >= period.value) {
				targetReached = true
				currentRate = end.value
				direction = "none"
			}
			if (currentRate.longValue() > 0) { 
				currentDelay = msPerUnit/(currentRate.longValue()) 
			}
			else { 
				currentDelay = 1 //Handling edge cases
			}
		} 
		
		future = timer.runAfter(currentDelay.intValue()) {
			trigger()
			scheduled = false
			schedule()
		}
		scheduled = true
	}
}

addEventListener( PropertyEvent ) { event ->
	if ( event.event == PropertyEvent.Event.VALUE ) {
		
		if( event.property == unit ) {
			if ( unit.value == "Sec" )
				msPerUnit = 1000
			if ( unit.value == "Min" )
				msPerUnit = 60000
			if ( unit.value == "Hour" )
				msPerUnit = 3600000
		}
		
		future?.cancel()
		
		started = false
		if (end.value > start.value)
			direction = "up"
		
		if (start.value > end.value)
			direction = "down"
		
		if (start.value == end.value)
			direction = "none"
		begin()
	}
}

onAction( "START" ) { schedule() }

onAction( "STOP" ) {
	future?.cancel()
	started = false
	scheduled = false
}

onAction( "COMPLETE" ) { reset() }

//Layout
layout  { 
	property( property:start, label:'Start', min:0 )
	property( property:end, label:'End', min:0 )
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	property( property:period, label:'Period\n(Sec)', min:1 ) 
	separator( vertical:true )
	box ( layout:"wrap, ins 0" ) {
		box( widget:'display' ) {
			node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" }, constraints:"w 60!" )
		}
		action( label:"Restart", action: { reset(); begin(); }, constraints:"align right" )
	}
}

//Compact Layout
compactLayout  {
	box( widget:'display' ) {
		node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" } )
	}
}

//Settings
//settings( label: "Properties", layout: 'wrap 2' ) {
//	box(layout:"growx, wrap 1") {
//		property( property:start, label:'Start', min:0 ) 
//		property( property:end, label:'End', min:0 ) 
//		property( property:period, label:'Period', min:1 ) 
//		property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
//	}
//} 

reset();
if (running)
	begin();
</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="start" type="java.lang.Long">0</con:property><con:property propagates="true" key="end" type="java.lang.Long">4</con:property><con:property propagates="true" key="period" type="java.lang.Long">120</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp</con:property><con:property key="_digest">3e1518dec707a9129b715eccefcde3da</con:property><con:property key="_id">com.eviware.Ramp</con:property><con:property key="_classLoader">com.eviware.Ramp</con:property><con:property key="gui.layoutX">831</con:property><con:property key="gui.layoutY">208</con:property></con:attributes><con:addons/></con:component><con:connection outputTerminalId="0888ae3f-3942-401b-92b3-aef683e3ced9/triggerTerminal" inputTerminalId="213e27f2-ac82-49af-817b-f87487f4fcf7/triggerTerminal"/></con:scene><con:scene label="Save patient" id="fa9cfa5c-4872-42cd-8fa2-dd9926fc7626" version="10"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con:property></con:properties><con:attributes><con:property key="gui.layoutX">939</con:property><con:property key="gui.layoutY">183</con:property><con:property key="gui.compact">false</con:property><con:property key="miniature">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
rkJggg==
</con:property></con:attributes><con:addons/><con:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Save patient runner" id="81f8e33b-b1f6-4b7b-92ea-aafec04b07b7"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="concurrentSamples" type="java.lang.Long">100</con:property><con:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con:property><con:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="_projectFileworkingCopy" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="false" key="projectRelativePath" type="java.lang.String">OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con:property propagates="true" key="settingsFile" type="java.io.File">/home/ryan/soapui-settings.xml</con:property><con:property propagates="true" key="_projectPassword" xsi:nil="true" type="java.lang.String" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:property propagates="true" key="useProjectRelativePath" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con:property><con:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con:property><con:property propagates="false" key="projectFile" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="testSuite" type="java.lang.String">OpenHIM Interface TestSuite</con:property><con:property propagates="true" key="testCase" type="java.lang.String">Save patient</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">soapUI Runner</con:property><con:property key="gui.layoutX">336</con:property><con:property key="gui.layoutY">391</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Fixed Rate" id="41ce0bb3-f3ef-4a7b-a5d1-5eb0f9a24bfb" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends an empty message periodically, at a set rate
 * 
 * @id com.eviware.FixedRate
 * @help http://www.loadui.org/Generators/fixed-rate-component.html
 * @name Fixed Rate
 * @category generators
 * @nonBlocking true
 */

import java.util.concurrent.TimeUnit

//Properties
createProperty( 'rate', Long, 10 ) { schedule() }
createProperty( 'unit', String, 'Sec' ) { schedule() }

onReplace( stateProperty ) { value ->
	if( value ) schedule()
	else future?.cancel( true )
}

createProperty( 'burstSize', Long, 1 )

triggerBurst = { 
	burstSize.value.times {
		trigger() 
	} 
}

future = null
schedule = {
	if( stateProperty.value ) {
		long microsecondsPerUnit = unit.value == 'Sec' ? 1000000 : unit.value == 'Min' ? 60000000 : 3600000000
		long delay = Math.max( 1, (long)(microsecondsPerUnit / rate.value) )
		future?.cancel( true )
		future = scheduleAtFixedRate( triggerBurst, delay, delay, TimeUnit.MICROSECONDS )
	}
}

onAction( "START" ) { schedule() }
onAction( "STOP" ) { future?.cancel( true ) }

//Layout
layout { 
	property( property:rate, label:'Rate', min:1 ) 
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" }, constraints:'wmin 75' )
	}
}

//Compact Layout
compactLayout {
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" } )
	}
}

//Settings
settings( label: "General" ) {
	property( property: burstSize, label: 'Burst size' ) 
}

if( running ) schedule()</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="rate" type="java.lang.Long">2</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property><con:property propagates="true" key="burstSize" type="java.lang.Long">1</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Rate</con:property><con:property key="_digest">c7926addaeaab3d091fd733b87da44d4</con:property><con:property key="_id">com.eviware.FixedRate</con:property><con:property key="_classLoader">com.eviware.FixedRate</con:property><con:property key="gui.layoutX">305</con:property><con:property key="gui.layoutY">182</con:property><con:property key="gui.compact">false</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Ramp" id="14170154-87c1-4454-ab8a-8d1c263e3350" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends signals at a decreasing or increasing rate until it gets to a prespecified level
 * 
 * @id com.eviware.Ramp
 * @help http://www.loadui.org/Generators/ramp-updown-component.html
 * @category generators
 * @nonBlocking true
 */

import com.eviware.loadui.api.events.PropertyEvent

//Properties
createProperty( 'start', Long, 0 )
createProperty( 'end', Long, 10 )
createProperty( 'period', Long, 10 )
createProperty( 'unit', String, 'Sec' )

direction = "up"
msPerUnit = 1000
currentRate = 0
gradient = 0
timeEllapsed = 0
currentDelay = 0
targetReached = false

timer = new Timer(true)

scheduled = false
future = null

reset = {
	currentDelay = 0
	timeEllapsed = 0
	targetReached = false
	if ( period.value > 0 ) {
		//Some sanity checks
//		if (start.value != 0) {
//			if (msPerUnit/start.value > period.value * 1000) {
//				targetReached = true
//				currentRate = end.value
//			}
//		} 
		
		if (!targetReached) {
			gradient = (end.value - start.value)/ (period.value * 1000)
			currentRate = start.value
			while (currentRate.longValue() == 0) {
				timeEllapsed++
				currentRate = start.value + timeEllapsed * gradient
			}
		}
	} else {
		targetReached = true
		currentRate = end.value()
	}
	scheduled = false
}

begin = {
	if (stateProperty.value) {
		reset();
		schedule();
	}
}

schedule = {
	if (stateProperty.value &amp;&amp; running &amp;&amp; !scheduled) {
		if (!targetReached) {
			if (currentDelay > 0) {
				timeEllapsed = timeEllapsed + currentDelay
				currentRate = start.value + timeEllapsed * gradient
			}
			
			if (timeEllapsed/1000 >= period.value) {
				targetReached = true
				currentRate = end.value
				direction = "none"
			}
			if (currentRate.longValue() > 0) { 
				currentDelay = msPerUnit/(currentRate.longValue()) 
			}
			else { 
				currentDelay = 1 //Handling edge cases
			}
		} 
		
		future = timer.runAfter(currentDelay.intValue()) {
			trigger()
			scheduled = false
			schedule()
		}
		scheduled = true
	}
}

addEventListener( PropertyEvent ) { event ->
	if ( event.event == PropertyEvent.Event.VALUE ) {
		
		if( event.property == unit ) {
			if ( unit.value == "Sec" )
				msPerUnit = 1000
			if ( unit.value == "Min" )
				msPerUnit = 60000
			if ( unit.value == "Hour" )
				msPerUnit = 3600000
		}
		
		future?.cancel()
		
		started = false
		if (end.value > start.value)
			direction = "up"
		
		if (start.value > end.value)
			direction = "down"
		
		if (start.value == end.value)
			direction = "none"
		begin()
	}
}

onAction( "START" ) { schedule() }

onAction( "STOP" ) {
	future?.cancel()
	started = false
	scheduled = false
}

onAction( "COMPLETE" ) { reset() }

//Layout
layout  { 
	property( property:start, label:'Start', min:0 )
	property( property:end, label:'End', min:0 )
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	property( property:period, label:'Period\n(Sec)', min:1 ) 
	separator( vertical:true )
	box ( layout:"wrap, ins 0" ) {
		box( widget:'display' ) {
			node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" }, constraints:"w 60!" )
		}
		action( label:"Restart", action: { reset(); begin(); }, constraints:"align right" )
	}
}

//Compact Layout
compactLayout  {
	box( widget:'display' ) {
		node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" } )
	}
}

//Settings
//settings( label: "Properties", layout: 'wrap 2' ) {
//	box(layout:"growx, wrap 1") {
//		property( property:start, label:'Start', min:0 ) 
//		property( property:end, label:'End', min:0 ) 
//		property( property:period, label:'Period', min:1 ) 
//		property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
//	}
//} 

reset();
if (running)
	begin();
</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="start" type="java.lang.Long">0</con:property><con:property propagates="true" key="end" type="java.lang.Long">4</con:property><con:property propagates="true" key="period" type="java.lang.Long">120</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp</con:property><con:property key="_digest">3e1518dec707a9129b715eccefcde3da</con:property><con:property key="_id">com.eviware.Ramp</con:property><con:property key="_classLoader">com.eviware.Ramp</con:property><con:property key="gui.layoutX">651</con:property><con:property key="gui.layoutY">174</con:property></con:attributes><con:addons/></con:component><con:connection outputTerminalId="41ce0bb3-f3ef-4a7b-a5d1-5eb0f9a24bfb/triggerTerminal" inputTerminalId="81f8e33b-b1f6-4b7b-92ea-aafec04b07b7/triggerTerminal"/></con:scene><con:scene label="Edit patient" id="949eb200-a7ed-48b9-8d47-72b6b38a9947" version="10"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con:property></con:properties><con:attributes><con:property key="gui.layoutX">374</con:property><con:property key="gui.layoutY">497</con:property><con:property key="gui.compact">false</con:property><con:property key="miniature">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
RU5ErkJggg==
</con:property></con:attributes><con:addons/><con:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Edit patient runner" id="0a178bf5-8574-4673-8984-2061bf73832e"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="concurrentSamples" type="java.lang.Long">100</con:property><con:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con:property><con:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="_projectFileworkingCopy" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="false" key="projectRelativePath" type="java.lang.String">OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con:property propagates="true" key="settingsFile" type="java.io.File">/home/ryan/soapui-settings.xml</con:property><con:property propagates="true" key="_projectPassword" xsi:nil="true" type="java.lang.String" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:property propagates="true" key="useProjectRelativePath" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con:property><con:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con:property><con:property propagates="false" key="projectFile" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="testSuite" type="java.lang.String">OpenHIM Interface TestSuite</con:property><con:property propagates="true" key="testCase" type="java.lang.String">Update patient</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">soapUI Runner</con:property><con:property key="gui.layoutX">277</con:property><con:property key="gui.layoutY">417</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Fixed Rate" id="3550eb88-c6d3-4d91-b9df-a68e806f2792" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends an empty message periodically, at a set rate
 * 
 * @id com.eviware.FixedRate
 * @help http://www.loadui.org/Generators/fixed-rate-component.html
 * @name Fixed Rate
 * @category generators
 * @nonBlocking true
 */

import java.util.concurrent.TimeUnit

//Properties
createProperty( 'rate', Long, 10 ) { schedule() }
createProperty( 'unit', String, 'Sec' ) { schedule() }

onReplace( stateProperty ) { value ->
	if( value ) schedule()
	else future?.cancel( true )
}

createProperty( 'burstSize', Long, 1 )

triggerBurst = { 
	burstSize.value.times {
		trigger() 
	} 
}

future = null
schedule = {
	if( stateProperty.value ) {
		long microsecondsPerUnit = unit.value == 'Sec' ? 1000000 : unit.value == 'Min' ? 60000000 : 3600000000
		long delay = Math.max( 1, (long)(microsecondsPerUnit / rate.value) )
		future?.cancel( true )
		future = scheduleAtFixedRate( triggerBurst, delay, delay, TimeUnit.MICROSECONDS )
	}
}

onAction( "START" ) { schedule() }
onAction( "STOP" ) { future?.cancel( true ) }

//Layout
layout { 
	property( property:rate, label:'Rate', min:1 ) 
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" }, constraints:'wmin 75' )
	}
}

//Compact Layout
compactLayout {
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" } )
	}
}

//Settings
settings( label: "General" ) {
	property( property: burstSize, label: 'Burst size' ) 
}

if( running ) schedule()</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="rate" type="java.lang.Long">11</con:property><con:property propagates="true" key="unit" type="java.lang.String">Min</con:property><con:property propagates="true" key="burstSize" type="java.lang.Long">1</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Rate</con:property><con:property key="_digest">c7926addaeaab3d091fd733b87da44d4</con:property><con:property key="_id">com.eviware.FixedRate</con:property><con:property key="_classLoader">com.eviware.FixedRate</con:property><con:property key="gui.layoutX">320</con:property><con:property key="gui.layoutY">171</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Ramp" id="f29d9d7a-6cef-42f1-ac11-d73c0a6e5e28" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends signals at a decreasing or increasing rate until it gets to a prespecified level
 * 
 * @id com.eviware.Ramp
 * @help http://www.loadui.org/Generators/ramp-updown-component.html
 * @category generators
 * @nonBlocking true
 */

import com.eviware.loadui.api.events.PropertyEvent

//Properties
createProperty( 'start', Long, 0 )
createProperty( 'end', Long, 10 )
createProperty( 'period', Long, 10 )
createProperty( 'unit', String, 'Sec' )

direction = "up"
msPerUnit = 1000
currentRate = 0
gradient = 0
timeEllapsed = 0
currentDelay = 0
targetReached = false

timer = new Timer(true)

scheduled = false
future = null

reset = {
	currentDelay = 0
	timeEllapsed = 0
	targetReached = false
	if ( period.value > 0 ) {
		//Some sanity checks
//		if (start.value != 0) {
//			if (msPerUnit/start.value > period.value * 1000) {
//				targetReached = true
//				currentRate = end.value
//			}
//		} 
		
		if (!targetReached) {
			gradient = (end.value - start.value)/ (period.value * 1000)
			currentRate = start.value
			while (currentRate.longValue() == 0) {
				timeEllapsed++
				currentRate = start.value + timeEllapsed * gradient
			}
		}
	} else {
		targetReached = true
		currentRate = end.value()
	}
	scheduled = false
}

begin = {
	if (stateProperty.value) {
		reset();
		schedule();
	}
}

schedule = {
	if (stateProperty.value &amp;&amp; running &amp;&amp; !scheduled) {
		if (!targetReached) {
			if (currentDelay > 0) {
				timeEllapsed = timeEllapsed + currentDelay
				currentRate = start.value + timeEllapsed * gradient
			}
			
			if (timeEllapsed/1000 >= period.value) {
				targetReached = true
				currentRate = end.value
				direction = "none"
			}
			if (currentRate.longValue() > 0) { 
				currentDelay = msPerUnit/(currentRate.longValue()) 
			}
			else { 
				currentDelay = 1 //Handling edge cases
			}
		} 
		
		future = timer.runAfter(currentDelay.intValue()) {
			trigger()
			scheduled = false
			schedule()
		}
		scheduled = true
	}
}

addEventListener( PropertyEvent ) { event ->
	if ( event.event == PropertyEvent.Event.VALUE ) {
		
		if( event.property == unit ) {
			if ( unit.value == "Sec" )
				msPerUnit = 1000
			if ( unit.value == "Min" )
				msPerUnit = 60000
			if ( unit.value == "Hour" )
				msPerUnit = 3600000
		}
		
		future?.cancel()
		
		started = false
		if (end.value > start.value)
			direction = "up"
		
		if (start.value > end.value)
			direction = "down"
		
		if (start.value == end.value)
			direction = "none"
		begin()
	}
}

onAction( "START" ) { schedule() }

onAction( "STOP" ) {
	future?.cancel()
	started = false
	scheduled = false
}

onAction( "COMPLETE" ) { reset() }

//Layout
layout  { 
	property( property:start, label:'Start', min:0 )
	property( property:end, label:'End', min:0 )
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	property( property:period, label:'Period\n(Sec)', min:1 ) 
	separator( vertical:true )
	box ( layout:"wrap, ins 0" ) {
		box( widget:'display' ) {
			node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" }, constraints:"w 60!" )
		}
		action( label:"Restart", action: { reset(); begin(); }, constraints:"align right" )
	}
}

//Compact Layout
compactLayout  {
	box( widget:'display' ) {
		node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" } )
	}
}

//Settings
//settings( label: "Properties", layout: 'wrap 2' ) {
//	box(layout:"growx, wrap 1") {
//		property( property:start, label:'Start', min:0 ) 
//		property( property:end, label:'End', min:0 ) 
//		property( property:period, label:'Period', min:1 ) 
//		property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
//	}
//} 

reset();
if (running)
	begin();
</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="start" type="java.lang.Long">0</con:property><con:property propagates="true" key="end" type="java.lang.Long">1</con:property><con:property propagates="true" key="period" type="java.lang.Long">120</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp</con:property><con:property key="_digest">3e1518dec707a9129b715eccefcde3da</con:property><con:property key="_id">com.eviware.Ramp</con:property><con:property key="_classLoader">com.eviware.Ramp</con:property><con:property key="gui.layoutX">699</con:property><con:property key="gui.layoutY">171</con:property></con:attributes><con:addons/></con:component><con:connection outputTerminalId="3550eb88-c6d3-4d91-b9df-a68e806f2792/triggerTerminal" inputTerminalId="0a178bf5-8574-4673-8984-2061bf73832e/triggerTerminal"/></con:scene><con:scene label="Query patient" id="16e5f2ce-6100-46b2-ac39-08ec3ab71857" version="10"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="CanvasItem.abortOnFinish" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="SceneItem.followProject" type="java.lang.Boolean">true</con:property></con:properties><con:attributes><con:property key="gui.layoutX">749</con:property><con:property key="gui.layoutY">501</con:property><con:property key="gui.compact">false</con:property><con:property key="miniature">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
</con:property></con:attributes><con:addons/><con:component type="com.eviware.loadui.components.soapui.SoapUISamplerComponent" label="Query patient runner" id="546cc6e3-ec04-43f4-a840-5aaa9225e505"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="concurrentSamples" type="java.lang.Long">100</con:property><con:property propagates="true" key="maxQueueSize" type="java.lang.Long">1000</con:property><con:property propagates="true" key="countDiscarded" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="_projectFileworkingCopy" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="false" key="projectRelativePath" type="java.lang.String">OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="disabledTestSteps" type="java.lang.String"/><con:property propagates="true" key="settingsFile" type="java.io.File">/home/ryan/soapui-settings.xml</con:property><con:property propagates="true" key="_projectPassword" xsi:nil="true" type="java.lang.String" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:property propagates="true" key="useProjectRelativePath" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="raiseError" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="outputTestCaseProperties" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="OutputLevel" type="java.lang.String">TestCase only</con:property><con:property propagates="true" key="closeConnectionsAfterRequest" type="java.lang.Boolean">false</con:property><con:property propagates="true" key="disableSoapuiAssertions" type="java.lang.Boolean">false</con:property><con:property propagates="false" key="projectFile" type="java.io.File">/home/ryan/git/openhim/src/test/resources/soapui-tests/OpenHIM-integration-tests.xml</con:property><con:property propagates="true" key="testSuite" type="java.lang.String">OpenHIM Interface TestSuite</con:property><con:property propagates="true" key="testCase" type="java.lang.String">Get patients</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">soapUI Runner</con:property><con:property key="gui.layoutX">333</con:property><con:property key="gui.layoutY">403</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Fixed Rate" id="115054ee-809f-466f-8a2c-5de5f51ce15f" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends an empty message periodically, at a set rate
 * 
 * @id com.eviware.FixedRate
 * @help http://www.loadui.org/Generators/fixed-rate-component.html
 * @name Fixed Rate
 * @category generators
 * @nonBlocking true
 */

import java.util.concurrent.TimeUnit

//Properties
createProperty( 'rate', Long, 10 ) { schedule() }
createProperty( 'unit', String, 'Sec' ) { schedule() }

onReplace( stateProperty ) { value ->
	if( value ) schedule()
	else future?.cancel( true )
}

createProperty( 'burstSize', Long, 1 )

triggerBurst = { 
	burstSize.value.times {
		trigger() 
	} 
}

future = null
schedule = {
	if( stateProperty.value ) {
		long microsecondsPerUnit = unit.value == 'Sec' ? 1000000 : unit.value == 'Min' ? 60000000 : 3600000000
		long delay = Math.max( 1, (long)(microsecondsPerUnit / rate.value) )
		future?.cancel( true )
		future = scheduleAtFixedRate( triggerBurst, delay, delay, TimeUnit.MICROSECONDS )
	}
}

onAction( "START" ) { schedule() }
onAction( "STOP" ) { future?.cancel( true ) }

//Layout
layout { 
	property( property:rate, label:'Rate', min:1 ) 
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" }, constraints:'wmin 75' )
	}
}

//Compact Layout
compactLayout {
	box( widget:'display' ) {
		node( label:'Rate', content: { "$rate.value / $unit.value" } )
	}
}

//Settings
settings( label: "General" ) {
	property( property: burstSize, label: 'Burst size' ) 
}

if( running ) schedule()</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="rate" type="java.lang.Long">2</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property><con:property propagates="true" key="burstSize" type="java.lang.Long">1</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Fixed Rate</con:property><con:property key="_digest">c7926addaeaab3d091fd733b87da44d4</con:property><con:property key="_id">com.eviware.FixedRate</con:property><con:property key="_classLoader">com.eviware.FixedRate</con:property><con:property key="gui.layoutX">292</con:property><con:property key="gui.layoutY">180</con:property></con:attributes><con:addons/></con:component><con:component type="com.eviware.loadui.groovy.GroovyComponent" label="Ramp" id="03eb4adc-9ab2-4155-a0a4-6ceab21f323d" category="generators"><con:properties><con:property propagates="true" key="ModelItem.description" type="java.lang.String"/><con:property propagates="true" key="_script" type="java.lang.String">// 
// Copyright 2011 SmartBear Software
// 
// Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the European Commission - subsequent
// versions of the EUPL (the "Licence");
// You may not use this work except in compliance with the Licence.
// You may obtain a copy of the Licence at:
// 
// http://ec.europa.eu/idabc/eupl5
// 
// Unless required by applicable law or agreed to in writing, software distributed under the Licence is
// distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the Licence for the specific language governing permissions and limitations
// under the Licence.
// 

/**
 * Sends signals at a decreasing or increasing rate until it gets to a prespecified level
 * 
 * @id com.eviware.Ramp
 * @help http://www.loadui.org/Generators/ramp-updown-component.html
 * @category generators
 * @nonBlocking true
 */

import com.eviware.loadui.api.events.PropertyEvent

//Properties
createProperty( 'start', Long, 0 )
createProperty( 'end', Long, 10 )
createProperty( 'period', Long, 10 )
createProperty( 'unit', String, 'Sec' )

direction = "up"
msPerUnit = 1000
currentRate = 0
gradient = 0
timeEllapsed = 0
currentDelay = 0
targetReached = false

timer = new Timer(true)

scheduled = false
future = null

reset = {
	currentDelay = 0
	timeEllapsed = 0
	targetReached = false
	if ( period.value > 0 ) {
		//Some sanity checks
//		if (start.value != 0) {
//			if (msPerUnit/start.value > period.value * 1000) {
//				targetReached = true
//				currentRate = end.value
//			}
//		} 
		
		if (!targetReached) {
			gradient = (end.value - start.value)/ (period.value * 1000)
			currentRate = start.value
			while (currentRate.longValue() == 0) {
				timeEllapsed++
				currentRate = start.value + timeEllapsed * gradient
			}
		}
	} else {
		targetReached = true
		currentRate = end.value()
	}
	scheduled = false
}

begin = {
	if (stateProperty.value) {
		reset();
		schedule();
	}
}

schedule = {
	if (stateProperty.value &amp;&amp; running &amp;&amp; !scheduled) {
		if (!targetReached) {
			if (currentDelay > 0) {
				timeEllapsed = timeEllapsed + currentDelay
				currentRate = start.value + timeEllapsed * gradient
			}
			
			if (timeEllapsed/1000 >= period.value) {
				targetReached = true
				currentRate = end.value
				direction = "none"
			}
			if (currentRate.longValue() > 0) { 
				currentDelay = msPerUnit/(currentRate.longValue()) 
			}
			else { 
				currentDelay = 1 //Handling edge cases
			}
		} 
		
		future = timer.runAfter(currentDelay.intValue()) {
			trigger()
			scheduled = false
			schedule()
		}
		scheduled = true
	}
}

addEventListener( PropertyEvent ) { event ->
	if ( event.event == PropertyEvent.Event.VALUE ) {
		
		if( event.property == unit ) {
			if ( unit.value == "Sec" )
				msPerUnit = 1000
			if ( unit.value == "Min" )
				msPerUnit = 60000
			if ( unit.value == "Hour" )
				msPerUnit = 3600000
		}
		
		future?.cancel()
		
		started = false
		if (end.value > start.value)
			direction = "up"
		
		if (start.value > end.value)
			direction = "down"
		
		if (start.value == end.value)
			direction = "none"
		begin()
	}
}

onAction( "START" ) { schedule() }

onAction( "STOP" ) {
	future?.cancel()
	started = false
	scheduled = false
}

onAction( "COMPLETE" ) { reset() }

//Layout
layout  { 
	property( property:start, label:'Start', min:0 )
	property( property:end, label:'End', min:0 )
	separator( vertical:true )
	property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
	separator( vertical:true )
	property( property:period, label:'Period\n(Sec)', min:1 ) 
	separator( vertical:true )
	box ( layout:"wrap, ins 0" ) {
		box( widget:'display' ) {
			node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" }, constraints:"w 60!" )
		}
		action( label:"Restart", action: { reset(); begin(); }, constraints:"align right" )
	}
}

//Compact Layout
compactLayout  {
	box( widget:'display' ) {
		node( label:'Rate', content: { "${currentRate.longValue()} / $unit.value $direction" } )
	}
}

//Settings
//settings( label: "Properties", layout: 'wrap 2' ) {
//	box(layout:"growx, wrap 1") {
//		property( property:start, label:'Start', min:0 ) 
//		property( property:end, label:'End', min:0 ) 
//		property( property:period, label:'Period', min:1 ) 
//		property( property:unit, label:'Unit', options:['Sec','Min','Hour'] )
//	}
//} 

reset();
if (running)
	begin();
</con:property><con:property propagates="true" key="stateProperty" type="java.lang.Boolean">true</con:property><con:property propagates="true" key="start" type="java.lang.Long">0</con:property><con:property propagates="true" key="end" type="java.lang.Long">4</con:property><con:property propagates="true" key="period" type="java.lang.Long">120</con:property><con:property propagates="true" key="unit" type="java.lang.String">Sec</con:property></con:properties><con:attributes><con:property key="com.eviware.loadui.api.model.ComponentItem@type">Ramp</con:property><con:property key="_digest">3e1518dec707a9129b715eccefcde3da</con:property><con:property key="_id">com.eviware.Ramp</con:property><con:property key="_classLoader">com.eviware.Ramp</con:property><con:property key="gui.layoutX">661</con:property><con:property key="gui.layoutY">174</con:property></con:attributes><con:addons/></con:component><con:connection outputTerminalId="115054ee-809f-466f-8a2c-5de5f51ce15f/triggerTerminal" inputTerminalId="546cc6e3-ec04-43f4-a840-5aaa9225e505/triggerTerminal"/></con:scene><con:statistics><con:page title="General"><con:chartGroup type="com.eviware.loadui.api.statistics.model.chart.line.LineChartView" title="Response Times"><con:templateScript xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/><con:chart statisticHolder="b82e7359-0dce-4ca3-8b2e-2851f2f4a745"><con:attributes><con:property key="_CHART_segments">68:36:b82e7359-0dce-4ca3-8b2e-2851f2f4a7458:Requests10:PER_SECOND4:main</con:property><con:property key="_CHART__SEGMENT_36:b82e7359-0dce-4ca3-8b2e-2851f2f4a7458:Requests10:PER_SECOND4:main_color">#FF2100</con:property><con:property key="_CHART__SEGMENT_36:b82e7359-0dce-4ca3-8b2e-2851f2f4a7458:Requests10:PER_SECOND4:main_scale">0</con:property></con:attributes></con:chart><con:chart statisticHolder="546cc6e3-ec04-43f4-a840-5aaa9225e505"><con:attributes><con:property key="_CHART_segments">67:36:546cc6e3-ec04-43f4-a840-5aaa9225e50510:Time Taken7:AVERAGE4:main</con:property><con:property key="_CHART__SEGMENT_36:546cc6e3-ec04-43f4-a840-5aaa9225e50510:Time Taken7:AVERAGE4:main_color">#FF7B00</con:property></con:attributes></con:chart><con:chart statisticHolder="0a178bf5-8574-4673-8984-2061bf73832e"><con:attributes><con:property key="_CHART_segments">67:36:0a178bf5-8574-4673-8984-2061bf73832e10:Time Taken7:AVERAGE4:main</con:property><con:property key="_CHART__SEGMENT_36:0a178bf5-8574-4673-8984-2061bf73832e10:Time Taken7:AVERAGE4:main_color">#00B700</con:property></con:attributes></con:chart><con:chart statisticHolder="213e27f2-ac82-49af-817b-f87487f4fcf7"><con:attributes><con:property key="_CHART_segments">67:36:213e27f2-ac82-49af-817b-f87487f4fcf710:Time Taken7:AVERAGE4:main</con:property><con:property key="_CHART__SEGMENT_36:213e27f2-ac82-49af-817b-f87487f4fcf710:Time Taken7:AVERAGE4:main_color">#00B2D2</con:property></con:attributes></con:chart><con:chart statisticHolder="81f8e33b-b1f6-4b7b-92ea-aafec04b07b7"><con:attributes><con:property key="_CHART_segments">67:36:81f8e33b-b1f6-4b7b-92ea-aafec04b07b710:Time Taken7:AVERAGE4:main</con:property><con:property key="_CHART__SEGMENT_36:81f8e33b-b1f6-4b7b-92ea-aafec04b07b710:Time Taken7:AVERAGE4:main_color">#7826B5</con:property></con:attributes></con:chart><con:chart statisticHolder="6bf2af3a-62fd-42df-a9d3-7d411c52b81f"><con:attributes><con:property key="_CHART_segments">67:36:6bf2af3a-62fd-42df-a9d3-7d411c52b81f10:Time Taken7:AVERAGE4:main</con:property><con:property key="_CHART__SEGMENT_36:6bf2af3a-62fd-42df-a9d3-7d411c52b81f10:Time Taken7:AVERAGE4:main_color">#D7268E</con:property></con:attributes></con:chart><con:attributes><con:property key="_CHARTGROUP_zoomLevel">SECONDS</con:property><con:property key="_CHARTGROUP_timeSpan">69500</con:property><con:property key="_CHARTGROUP_position">38453</con:property><con:property key="_CHARTGROUP_follow">false</con:property></con:attributes></con:chartGroup></con:page></con:statistics></con:loadui-project>